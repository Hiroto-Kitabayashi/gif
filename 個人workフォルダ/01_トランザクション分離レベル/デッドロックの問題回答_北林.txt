排他ロックと共有ロックによるデッドロックが発生した場合に、
処置として適切なものはどれか。

デッドロックした機能のSQL

テーブルAのSELECT後（楽観チェック）にテーブルAをUPDATE


前提条件
データベースの設定「READ COMMITTED」

①Select文のクエリに対して共有ロックのロックヒントを付与
②Select文のクエリに対して排他ロックのロックヒントを付与
③UPDATE文のクエリに対して共有ロックのロックヒントを付与
④UPDATE文のクエリに対して排他ロックのロックヒントを付与
⑤その他

回答：②

理由：
タブレットAが読み込んだタイミングで排他ロックをかけることにより、一括送信データの1つ目のデータ読み込み～最後のデータの更新完了まで
タブレットBの割り込み処理が入らない、つまり、タブレットAが読み込んだデータと、タブレットAが更新しようとしているデータ情報は常に同じことが保証されるため。


